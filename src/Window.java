
import java.awt.BorderLayout;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import javax.swing.JOptionPane;

/**
 *
 * @author majcz_000
 */
public class Window extends javax.swing.JFrame {

    // BackGround bgPanel = new BackGround(); //image of non-linear block
    XYSeries series_stim;                  //stimulation data series 
    XYSeries series_ans;                  //answer data series 
    XYSeries series_err;                   //error data series 

    boolean start_simulation = false;

    int Stimulation_Type = 0;               //0-prostokąt, 1-trójkąt, 2-sinusoida, 3-delta
    int Method = 0;                         //0-Całkowanie metodą prostokątów, 1-Całkowanie metodą paraboli, 2-Całkowanie metodą trapezów 

    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        T = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Period = new javax.swing.JTextField();
        Start_Simulation = new javax.swing.JButton();
        Step_Size = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        stimulation_type = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        A = new javax.swing.JTextField();
        a = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Amp = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Chart = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Length = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        method = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("T:");

        T.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        T.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        T.setText("1");
        T.setToolTipText("");
        T.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TActionPerformed(evt);
            }
        });

        jLabel6.setText("Amplituda");

        jLabel7.setText("Czas[s]");

        Period.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Period.setText("1");
        Period.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PeriodActionPerformed(evt);
            }
        });

        Start_Simulation.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Start_Simulation.setForeground(new java.awt.Color(255, 0, 0));
        Start_Simulation.setText("Symuluj");
        Start_Simulation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Start_SimulationActionPerformed(evt);
            }
        });

        Step_Size.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Step_Size.setText("0.01");
        Step_Size.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Step_SizeActionPerformed(evt);
            }
        });

        jLabel8.setText("Krok");

        stimulation_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Prostokąt", "Trójkąt", "Sinusoida", "Delta" }));
        stimulation_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stimulation_typeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Pobudzenie:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Wartości Parametrów:");

        A.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        A.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        A.setText("1");
        A.setToolTipText("");
        A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AActionPerformed(evt);
            }
        });

        a.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        a.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        a.setText("1");
        a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("A:");

        Amp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Amp.setText("10");
        Amp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AmpActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("a:");

        Chart.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout ChartLayout = new javax.swing.GroupLayout(Chart);
        Chart.setLayout(ChartLayout);
        ChartLayout.setHorizontalGroup(
            ChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 915, Short.MAX_VALUE)
        );
        ChartLayout.setVerticalGroup(
            ChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel1.setText("Długość");

        Length.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Length.setText("5");
        Length.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LengthActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("Sposób całkowania:");

        method.setBackground(new java.awt.Color(240, 240, 240));
        method.setForeground(getForeground());
        method.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Prostokąt", "Parabola", "Trapez" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(T, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Start_Simulation, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(method, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(56, 56, 56))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(stimulation_type, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(Period, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                        .addComponent(Amp, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                        .addComponent(Length)
                                        .addComponent(Step_Size)))
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(Chart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stimulation_type, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Amp, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Period, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Step_Size, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(Length)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(T, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(method, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(Start_Simulation, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Chart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Start_SimulationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Start_SimulationActionPerformed
        start_simulation = true;

        Calculations Calculate = new Calculations();
        double Step_Size_copy = Double.parseDouble(Step_Size.getText());
        double Length_copy = Double.parseDouble(Length.getText());
        Calculate.Period_copy = Double.parseDouble(Period.getText());
        Calculate.A_copy = Double.parseDouble(A.getText());
        Calculate.a_copy = Double.parseDouble(a.getText());
        Calculate.T_copy = Double.parseDouble(T.getText());
        Calculate.Amp_copy = Double.parseDouble(Amp.getText());
        

///*             
        try {

            if (Calculate.A_copy < 0 || Calculate.a_copy < 0 || Calculate.T_copy < 0) // checks if the parameters are correct  
            {
                JOptionPane.showMessageDialog(null, "Parametry: A, a, T muszą być dodatnie!", null, JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (Calculate.Amp_copy < 0 || Calculate.Period_copy < 0) // checks if the parameters are correct 
            {
                JOptionPane.showMessageDialog(null, "Amplituda i Czas muszą być dodatnie!", null, JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (Calculate.Period_copy > 400) {                        // checks if the parameters are correct            
                JOptionPane.showMessageDialog(null, "Za długi czas symulacji!", null, JOptionPane.ERROR_MESSAGE);
                return;
            }

        } catch (NumberFormatException err) {
            JOptionPane.showMessageDialog(null, "Proszę wpisać liczby lub nie używać przecinków.", null, JOptionPane.ERROR_MESSAGE); //error okienko
            return;
        }
//*/
        if (Step_Size_copy < 0) // checks if the parameters are correct  
        {
            JOptionPane.showMessageDialog(null, "Krok symulacji nie może być ujemny!", null, JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (Step_Size_copy < 0.001) // checks if the parameters are correct   
        {
            JOptionPane.showMessageDialog(null, "Za mały krok symulacji! Może spowodować zawieszenie komputera", null, JOptionPane.ERROR_MESSAGE);
            return;
        }

        Stimulation_Type = stimulation_type.getSelectedIndex();
        Method = method.getSelectedIndex();

        series_stim = new XYSeries("Pubudzenie");
        series_ans = new XYSeries("Odpowiedź");
        series_err = new XYSeries("Uchyb");

        XYSeriesCollection dataSet = new XYSeriesCollection();

        double stimulate;
        double X1;
        double W;
       
        for (double i = 0; i <= Length_copy; i += Step_Size_copy) {
           
            stimulate = Calculate.Stimulation(Stimulation_Type, i, Step_Size_copy);
            W = Calculate.NonLinearBlock(i);
            X1 = Calculate.SystemAnswer(i);

            
            
            series_stim.add(i, stimulate);
            /*
            double y_poch_akt = y_poch;
            y_poch = licz.Euler_2poch(y_poch, pobudz, y_t1, krok);
            
            y_t1 = licz.Euler_y_t1(y_poch, y_poch_akt, krok);
            y_t2 = licz.Euler_y_t2(y_t1);
            y_t3 = licz.Euler_y_t3(y_t2);
            
            series_ans.add(i, x4 );
            series_err.add(i, y_t2);       
             */
            series_ans.add(i, X1);
            series_err.add(i, W);
            
            
        }

        dataSet.addSeries(series_stim);
        dataSet.addSeries(series_ans);
        dataSet.addSeries(series_err);

        if (start_simulation) {
            JFreeChart chart;
            chart = ChartFactory.createXYLineChart(
                    "Odpowiedź układu",//Title      
                    "Czas [s]", // x-axis 
                    "Wartość amplitudy", // y-axis 
                    dataSet, // Data
                    PlotOrientation.VERTICAL, // /HORIZONTAL/VERTICAL
                    true, // show legend    
                    true, // tooltips
                    false
            );

            ChartPanel chart1 = new ChartPanel(chart);

            Chart.removeAll();
            Chart.setLayout(new BorderLayout());
            Chart.add(chart1, BorderLayout.CENTER);
            Chart.validate();

        } else {
            start_simulation = false;
        }

    }//GEN-LAST:event_Start_SimulationActionPerformed

    private void AmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AmpActionPerformed

    private void PeriodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PeriodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PeriodActionPerformed

    private void Step_SizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Step_SizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Step_SizeActionPerformed

    private void aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aActionPerformed

    private void AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AActionPerformed

    private void TActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TActionPerformed

    private void LengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LengthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LengthActionPerformed

    private void stimulation_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stimulation_typeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stimulation_typeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Window inst = new Window();
                inst.setLocationRelativeTo(null);
                inst.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField A;
    private javax.swing.JTextField Amp;
    private javax.swing.JPanel Chart;
    private javax.swing.JTextField Length;
    private javax.swing.JTextField Period;
    private javax.swing.JButton Start_Simulation;
    private javax.swing.JTextField Step_Size;
    private javax.swing.JTextField T;
    private javax.swing.JTextField a;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox method;
    private javax.swing.JComboBox stimulation_type;
    // End of variables declaration//GEN-END:variables
}
